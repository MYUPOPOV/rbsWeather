(()=>{"use strict";var __webpack_modules__={719:()=>{eval("\n;// CONCATENATED MODULE: ./modules/helpers.js\nconst animate = function ({ timing, draw, duration }) {\r\n\tlet start = performance.now();\r\n\r\n\trequestAnimationFrame(function animate(time) {\r\n\t\t// timeFraction изменяется от 0 до 1\r\n\t\tlet timeFraction = (time - start) / duration;\r\n\t\tif (timeFraction > 1) timeFraction = 1;\r\n\r\n\t\t// вычисление текущего состояния анимации\r\n\t\tlet progress = timing(timeFraction);\r\n\r\n\t\tdraw(progress); // отрисовать её\r\n\r\n\t\tif (timeFraction < 1) {\r\n\t\t\trequestAnimationFrame(animate);\r\n\t\t}\r\n\t});\r\n};\r\n\r\n\r\n\n;// CONCATENATED MODULE: ./modules/renderWeather.js\n\r\n\r\nconst renderWeather = () => {\r\n\tconst string1 = document.querySelector('.main-block__string-1');\r\n\tconst string2 = document.querySelector('.main-block__string-2');\r\n\tconst stringArray = [string1, string2];\r\n\tconst time = 2000;\r\n\tstring1.style.opacity = 0;\r\n\tstring2.style.opacity = 0;\r\n\tstring1.textContent = 'Приветствую тебя, друг';\r\n\tstring2.textContent = 'Давай я расскажу тебе какая погода будет во Владимире';\r\n\tconst weekArray = ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'];\r\n\tconst monthArray = ['Января', 'Февраля', 'Марта', 'Апреля', 'Мая', 'Июня', 'Июля', 'Августа', 'Сентября', 'Октября', 'Ноября', 'Декабря'];\r\n\tconst dayBlocks = document.querySelectorAll('.weather-block__day');\r\n\tdayBlocks.forEach((item) => {\r\n\t\titem.style.opacity = 0;\r\n\t});\r\n\r\n\t// Появление надписей\r\n\tconst animateItemAppear = (item, index, time = 2000) => {\r\n\t\tanimate({\r\n\t\t\tduration: time,\r\n\t\t\ttiming(timeFraction) {\r\n\t\t\t\treturn timeFraction;\r\n\t\t\t},\r\n\t\t\tdraw(progress) {\r\n\t\t\t\titem[index].style.opacity = progress;\r\n\t\t\t\tif (item[index].style.opacity >= 1 && index + 1 < item.length) {\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t\tanimateItemAppear(item, index, time);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\tconst renderWeatherBlock = (data) => {\r\n\t\tfor (let i = 0; i < 7; i++) {\r\n\t\t\tconst item = data.daily[i];\r\n\r\n\t\t\tconst date = new Date(parseInt(`${item.dt}000`));\r\n\t\t\tconst sunrise = new Date(parseInt(`${item.sunrise}000`));\r\n\t\t\tconst sunset = new Date(parseInt(`${item.sunset}000`));\r\n\t\t\tconst sunriseMinutes = sunrise.getMinutes() < 10 ? `0${sunrise.getMinutes()}` : sunrise.getMinutes();\r\n\t\t\tconst sunsetMinutes = sunset.getMinutes() < 10 ? `0${sunset.getMinutes()}` : sunset.getMinutes();\r\n\r\n\t\t\tdayBlocks[i].querySelector('.weather-block__day__string1').innerHTML = `<u>${weekArray[date.getDay()]}, ${date.getDate()} ${monthArray[date.getMonth()]}</u>`;\r\n\r\n\t\t\tdayBlocks[i].querySelector('.weather-block__day__string2').innerHTML = `<img src=\"./images/temperature.png\"><span>${Math.ceil(item.temp.night)} — ${Math.ceil(item.temp.day)} °C</span>`;\r\n\r\n\t\t\tdayBlocks[i].querySelector('.weather-block__day__string3').innerHTML = item.weather[0].description[0].toUpperCase() + item.weather[0].description.slice(1);\r\n\r\n\t\t\tdayBlocks[i].querySelector('.weather-block__day__string4').innerHTML = ` <img src=\"./images/wind.png\"><span>${Math.ceil(item.wind_speed)} — ${Math.ceil(item.wind_gust)} м/с</span>`;\r\n\r\n\t\t\tdayBlocks[i].querySelector(\r\n\t\t\t\t'.weather-block__day__string5'\r\n\t\t\t).innerHTML = ` <img src=\"./images/sunrise.png\"><span>${sunrise.getHours()}:${sunriseMinutes} — ${sunset.getHours()}:${sunsetMinutes}</span>`;\r\n\r\n\t\t\tconsole.log(`${weekArray[date.getDay()]}, ${date.getDate()} ${monthArray[date.getMonth()]}`);\r\n\t\t\tconsole.log(`${Math.ceil(item.temp.night)} — ${Math.ceil(item.temp.day)} °C`);\r\n\t\t\tconsole.log(item.weather[0].description[0].toUpperCase() + item.weather[0].description.slice(1));\r\n\t\t\tconsole.log(`Ветер: ${Math.ceil(item.wind_speed)} — ${Math.ceil(item.wind_gust)} м/с`);\r\n\t\t\tconsole.log(`Светло: ${sunrise.getHours()}:${sunriseMinutes} — ${sunset.getHours()}:${sunsetMinutes}`);\r\n\t\t\tconsole.log(`   `);\r\n\t\t}\r\n\t};\r\n\r\n\t// Получаем прогноз от openweathermap.org\r\n\tconst getData = () => {\r\n\t\treturn fetch('https://api.openweathermap.org/data/2.5/onecall?lat=56.143063&lon=40.410934&exclude=hourly,minutely&units=metric&lang=ru&appid=2b669c7a2dd43a321c1f550c222bf37b', {\r\n\t\t\tmethod: 'GET',\r\n\t\t});\r\n\t};\r\n\tgetData()\r\n\t\t.then((response) => {\r\n\t\t\treturn response.json();\r\n\t\t})\r\n\t\t.then((data) => {\r\n\t\t\trenderWeatherBlock(data);\r\n\t\t})\r\n\t\t.catch((error) => {\r\n\t\t\tconsole.log(error);\r\n\t\t});\r\n\r\n\tanimateItemAppear(stringArray, 0, time);\r\n\tsetTimeout(() => {\r\n\t\tanimateItemAppear(dayBlocks, 0, time);\r\n\t}, 4000);\r\n};\r\n\r\n/* harmony default export */ const modules_renderWeather = (renderWeather);\r\n\n;// CONCATENATED MODULE: ./index.js\n\r\n\r\nmodules_renderWeather();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///719\n")}},__webpack_exports__={};__webpack_modules__[719]()})();