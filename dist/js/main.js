(()=>{"use strict";var __webpack_modules__={719:()=>{eval("\n;// CONCATENATED MODULE: ./modules/helpers.js\nconst animate = function ({ timing, draw, duration }) {\r\n\tlet start = performance.now();\r\n\r\n\trequestAnimationFrame(function animate(time) {\r\n\t\t// timeFraction изменяется от 0 до 1\r\n\t\tlet timeFraction = (time - start) / duration;\r\n\t\tif (timeFraction > 1) timeFraction = 1;\r\n\r\n\t\t// вычисление текущего состояния анимации\r\n\t\tlet progress = timing(timeFraction);\r\n\r\n\t\tdraw(progress); // отрисовать её\r\n\r\n\t\tif (timeFraction < 1) {\r\n\t\t\trequestAnimationFrame(animate);\r\n\t\t}\r\n\t});\r\n};\r\n\r\n\r\n\n;// CONCATENATED MODULE: ./modules/renderWeather.js\n\r\n\r\nconst renderWeather = (time = 2000) => {\r\n\tconst string1 = document.querySelector('.main-block__string-1');\r\n\tconst string2 = document.querySelector('.main-block__string-2');\r\n\tconst string3 = document.querySelector('.main-block__string-3');\r\n\tconst map = document.getElementById('map');\r\n\r\n\tconst weekArray = ['Воскресенье', 'Понедельник', 'Вторник', 'Среда', 'Четверг', 'Пятница', 'Суббота'];\r\n\tconst monthArray = ['Января', 'Февраля', 'Марта', 'Апреля', 'Мая', 'Июня', 'Июля', 'Августа', 'Сентября', 'Октября', 'Ноября', 'Декабря'];\r\n\tconst dayBlocks = document.querySelectorAll('.weather-block__day');\r\n\r\n\t// let interval;\r\n\r\n\t// let coords;\r\n\t// let lat = 56.143063;\r\n\t// let lon = 40.410934;\r\n\t// let place = 'город Владимир';\r\n\r\n\tfunction init() {\r\n\t\tvar myPlacemark,\r\n\t\t\tmyMap = new ymaps.Map(\r\n\t\t\t\t'map',\r\n\t\t\t\t{\r\n\t\t\t\t\tcenter: [56.143063, 40.410934],\r\n\t\t\t\t\tzoom: 9,\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tsearchControlProvider: 'yandex#search',\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t// Слушаем клик на карте.\r\n\t\tmyMap.events.add('click', function (e) {\r\n\t\t\tcoords = e.get('coords');\r\n\r\n\t\t\t// Если метка уже создана – просто передвигаем ее.\r\n\t\t\tif (myPlacemark) {\r\n\t\t\t\tmyPlacemark.geometry.setCoordinates(coords);\r\n\t\t\t}\r\n\t\t\t// Если нет – создаем.\r\n\t\t\telse {\r\n\t\t\t\tmyPlacemark = createPlacemark(coords);\r\n\r\n\t\t\t\tmyMap.geoObjects.add(myPlacemark);\r\n\t\t\t\t// Слушаем событие окончания перетаскивания на метке.\r\n\t\t\t\tmyPlacemark.events.add('dragend', function () {\r\n\t\t\t\t\tgetAddress(myPlacemark.geometry.getCoordinates());\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tgetAddress(coords);\r\n\r\n\t\t\t// console.log('~ coords', coords[0], coords[1]); // ПОКАЗЫВАЕМ КООРДИНАТЫ\r\n\t\t\t// console.log('~ \tmyPlacemark', myPlacemark.properties._data.balloonContent);\r\n\r\n\t\t\t// myPlacemark.properties._data.iconCaption\r\n\r\n\t\t\t// getData(lat, lon, place)\r\n\t\t\t// .then((response) => {\r\n\t\t\t//   return response.json();\r\n\t\t\t// })\r\n\t\t\t// .then((data) => {\r\n\t\t\t//   // setTimeout(() => {\r\n\t\t\t//   renderWeatherBlock(data, place);\r\n\t\t\t//   // }, time * delay);\r\n\t\t\t// })\r\n\t\t\t// .catch((error) => {\r\n\t\t\t//   console.log(error);\r\n\t\t\t// });\r\n\r\n\t\t\t// getData(lat, lon, place) // ОТРИСОВЫВАЕМ ПОГОДУ\r\n\t\t});\r\n\t\t// Создание метки.\r\n\t\tfunction createPlacemark(coords) {\r\n\t\t\treturn new ymaps.Placemark(\r\n\t\t\t\tcoords,\r\n\t\t\t\t{\r\n\t\t\t\t\ticonCaption: 'поиск...',\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tpreset: 'islands#violetDotIconWithCaption',\r\n\t\t\t\t\tdraggable: true,\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\t}\r\n\t\t// Определяем адрес по координатам (обратное геокодирование).\r\n\t\tfunction getAddress(coords) {\r\n\t\t\tmyPlacemark.properties.set('iconCaption', 'поиск...');\r\n\t\t\tymaps.geocode(coords).then(function (res) {\r\n\t\t\t\tvar firstGeoObject = res.geoObjects.get(0);\r\n\r\n\t\t\t\tmyPlacemark.properties.set({\r\n\t\t\t\t\t// Формируем строку с данными об объекте.\r\n\t\t\t\t\ticonCaption: [\r\n\t\t\t\t\t\t// Название населенного пункта или вышестоящее административно-территориальное образование.\r\n\t\t\t\t\t\tfirstGeoObject.getLocalities().length ? firstGeoObject.getLocalities() : firstGeoObject.getAdministrativeAreas(),\r\n\t\t\t\t\t\t// Получаем путь до топонима, если метод вернул null, запрашиваем наименование здания.\r\n\t\t\t\t\t\tfirstGeoObject.getThoroughfare() || firstGeoObject.getPremise(),\r\n\t\t\t\t\t]\r\n\t\t\t\t\t\t.filter(Boolean)\r\n\t\t\t\t\t\t.join(', '),\r\n\t\t\t\t\t// В качестве контента балуна задаем строку с адресом объекта.\r\n\t\t\t\t\tballoonContent: firstGeoObject.getAddressLine(),\r\n\t\t\t\t});\r\n\r\n\t\t\t\tgetData(coords[0], coords[1])\r\n\t\t\t\t\t.then((response) => {\r\n\t\t\t\t\t\treturn response.json();\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then((data) => {\r\n\t\t\t\t\t\t// setTimeout(() => {\r\n\t\t\t\t\t\trenderWeatherBlock(data, firstGeoObject.getAddressLine());\r\n\t\t\t\t\t\t// }, time * delay);\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.catch((error) => {\r\n\t\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t// getData(lat, lon, place) // ОТРИСОВЫВАЕМ ПОГОДУ\r\n\r\n\t\t\t\t// console.log(coords);\r\n\t\t\t\t// console.log(firstGeoObject.getAddressLine());\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tconst clearAnimateItems = (items) => {\r\n\t\titems.forEach((item) => {\r\n\t\t\titem.style.opacity = 0;\r\n\t\t});\r\n\t};\r\n\r\n\t// Анимация появления объектов\r\n\tconst animateItemAppear = (item, index, time = 2000) => {\r\n\t\tanimate({\r\n\t\t\tduration: time,\r\n\t\t\ttiming(timeFraction) {\r\n\t\t\t\treturn timeFraction;\r\n\t\t\t},\r\n\t\t\tdraw(progress) {\r\n\t\t\t\titem[index].style.opacity = progress;\r\n\t\t\t\tif (item[index].style.opacity >= 1 && index + 1 < item.length) {\r\n\t\t\t\t\tindex++;\r\n\t\t\t\t\tanimateItemAppear(item, index, time);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\t// Рендерим приетственный блок\r\n\tconst renderHello = () => {\r\n\t\t// stringArray.forEach((item) => {\r\n\t\t// \titem.style.opacity = 0;\r\n\t\t// });\r\n\t\tstring1.textContent = 'Приветствую тебя, друг';\r\n\t\tstring2.textContent = 'Выбери точку на карте, и я покажу тебе погоду на неделю для этого места';\r\n\r\n\t\tanimateItemAppear(stringArray, 0, time);\r\n\t};\r\n\r\n\t// Рендерим блок погоды\r\n\tconst renderWeatherBlock = (data, place) => {\r\n\t\tconst daysArray = [string3, ...dayBlocks];\r\n\t\tconsole.log('~ daysArray', daysArray);\r\n\r\n\t\tclearAnimateItems(daysArray);\r\n\t\t// clearInterval(interval)\r\n\t\t// daysArray.forEach((item) => {\r\n\t\t// \titem.style.opacity = 0;\r\n\t\t// });\r\n\r\n\t\tstring3.textContent = `Сейчас выбран: ${place}`;\r\n\r\n\t\tfor (let i = 1; i < 8; i++) {\r\n\t\t\tconst item = data.daily[i];\r\n\t\t\tconst date = new Date(parseInt(`${item.dt}000`));\r\n\t\t\tconst sunrise = new Date(parseInt(`${item.sunrise}000`));\r\n\t\t\tconst sunset = new Date(parseInt(`${item.sunset}000`));\r\n\t\t\tconst sunriseMinutes = sunrise.getMinutes() < 10 ? `0${sunrise.getMinutes()}` : sunrise.getMinutes();\r\n\t\t\tconst sunsetMinutes = sunset.getMinutes() < 10 ? `0${sunset.getMinutes()}` : sunset.getMinutes();\r\n\r\n\t\t\tdaysArray[i].querySelector('.weather-block__day__string1').innerHTML = `<u>${weekArray[date.getDay()]}, ${date.getDate()} ${monthArray[date.getMonth()]}</u>`;\r\n\r\n\t\t\tdaysArray[i].querySelector('.weather-block__day__string2').innerHTML = `<img src=\"./images/temperature.png\"><span>${Math.ceil(item.temp.night)} — ${Math.ceil(item.temp.day)} °C</span>`;\r\n\r\n\t\t\tdaysArray[i].querySelector('.weather-block__day__string3').innerHTML = item.weather[0].description[0].toUpperCase() + item.weather[0].description.slice(1);\r\n\r\n\t\t\tdaysArray[i].querySelector('.weather-block__day__string4').innerHTML = ` <img src=\"./images/wind.png\"><span>${Math.ceil(item.wind_speed)} — ${Math.ceil(item.wind_gust)} м/с</span>`;\r\n\r\n\t\t\tdaysArray[i].querySelector(\r\n\t\t\t\t'.weather-block__day__string5'\r\n\t\t\t).innerHTML = ` <img src=\"./images/sunrise.png\"><span>${sunrise.getHours()}:${sunriseMinutes} — ${sunset.getHours()}:${sunsetMinutes}</span>`;\r\n\t\t}\r\n\r\n\t\tanimateItemAppear(daysArray, 0, time);\r\n\r\n\t\t// setTimeout(() => {\r\n\t\t// \tanimateItemAppear(daysArray, 0, time);\r\n\t\t// }, 5000);\r\n\t};\r\n\r\n\t// Получаем прогноз от openweathermap.org\r\n\tconst getData = (lat, lon) => {\r\n\t\treturn fetch(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=hourly,minutely&units=metric&lang=ru&appid=2b669c7a2dd43a321c1f550c222bf37b`, {\r\n\t\t\tmethod: 'GET',\r\n\t\t});\r\n\t};\r\n\r\n\t// Блок выполнения\r\n\tymaps.ready(init);\r\n\r\n\tconst stringArray = [string1, string2, map];\r\n\tclearAnimateItems(stringArray);\r\n\trenderHello();\r\n\r\n\t// getData(lat, lon, place)\r\n\t// \t.then((response) => {\r\n\t// \t\treturn response.json();\r\n\t// \t})\r\n\t// \t.then((data) => {\r\n\t// \t\t// setTimeout(() => {\r\n\t// \t\trenderWeatherBlock(data, place);\r\n\t// \t\t// }, time * delay);\r\n\t// \t})\r\n\t// \t.catch((error) => {\r\n\t// \t\tconsole.log(error);\r\n\t// \t});\r\n};\r\n\r\n/* harmony default export */ const modules_renderWeather = (renderWeather);\r\n\n;// CONCATENATED MODULE: ./index.js\n\r\n// import eventReverseGeocode from './modules/eventReverseGeocode';\r\n\r\nmodules_renderWeather(1200);\r\n// eventReverseGeocode();\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///719\n")}},__webpack_exports__={};__webpack_modules__[719]()})();